// <auto-generated />
using System;
using Bleeter.BleetsService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bleeter.BleetsService.Migrations
{
    [DbContext(typeof(BleetsContext))]
    partial class BleetsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Bleeter.BleetsService.Data.Models.AuthorModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataDeletedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateCreatedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateModifiedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Authors", (string)null);
                });

            modelBuilder.Entity("Bleeter.BleetsService.Data.Models.BleetModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataDeletedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateCreatedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateModifiedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Bleets", (string)null);
                });

            modelBuilder.Entity("Bleeter.BleetsService.Data.Models.CommentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BleetId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataDeletedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateCreatedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateModifiedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BleetId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("Bleeter.BleetsService.Data.Models.LikeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BleetId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("BleetModelId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataDeletedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateCreatedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateModifiedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BleetModelId");

                    b.ToTable("Likes", (string)null);
                });

            modelBuilder.Entity("Bleeter.BleetsService.Data.Models.BleetModel", b =>
                {
                    b.HasOne("Bleeter.BleetsService.Data.Models.AuthorModel", "Author")
                        .WithMany("Bleets")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Bleeter.BleetsService.Data.Models.CommentModel", b =>
                {
                    b.HasOne("Bleeter.BleetsService.Data.Models.AuthorModel", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bleeter.BleetsService.Data.Models.BleetModel", "Bleet")
                        .WithMany("Comments")
                        .HasForeignKey("BleetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Bleet");
                });

            modelBuilder.Entity("Bleeter.BleetsService.Data.Models.LikeModel", b =>
                {
                    b.HasOne("Bleeter.BleetsService.Data.Models.AuthorModel", "Account")
                        .WithMany("Likes")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bleeter.BleetsService.Data.Models.BleetModel", null)
                        .WithMany("Likes")
                        .HasForeignKey("BleetModelId");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Bleeter.BleetsService.Data.Models.AuthorModel", b =>
                {
                    b.Navigation("Bleets");

                    b.Navigation("Comments");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Bleeter.BleetsService.Data.Models.BleetModel", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");
                });
#pragma warning restore 612, 618
        }
    }
}
